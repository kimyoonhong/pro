<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap id="memResult" type="memberVO">
		<result property="MEMBER_ID" column="MEMBER_ID" />
        <result property="MEMBER_PW" column="MEMBER_PW" />
        <result property="MEMBER_NAME" column="MEMBER_NAME" />
        <result property="MEMBER_GENDER" column="MEMBER_GENDER" />
        <result property="MEMBER_BIRTH_Y" column="MEMBER_BIRTH_Y" />
        <result property="MEMBER_BIRTH_M" column="MEMBER_BIRTH_M" />
        <result property="MEMBER_BIRTH_D" column="MEMBER_BIRTH_D" />
        <result property="MEMBER_CONTENT" column="MEMBER_CONTENT" />
        <result property="MEMBER_JOB" column="MEMBER_JOB" />
        
        <result property="TEL1" column="TEL1" />
        <result property="HP1" column="HP1" />
        <result property="SMSSTS_YN" column="SMSSTS_YN" />
        <result property="EMAIL1" column="EMAIL1" />
        <result property="EMAILSTS_YN" column="EMAILSTS_YN" />
        <result property="ZIPCODE" column="ZIPCODE" />
        <result property="ROADADDRESS" column="ROADADDRESS" />
        <result property="JIBUNADDRESS" column="JIBUNADDRESS" />
        <result property="NAMUJIADDRESS" column="NAMUJIADDRESS" />
        <result property="JOINDATE" column="JOINDATE" />
        <result property="TAG" column="TAG" />        
	</resultMap> 
	
	<!-- 프로젝트에 신청한 회원 정보 조회 -->
	<select id = "selectMemberInfo" parameterType="String" resultType="memberVO">
		select MEMBER_NAME, MEMBER_GENDER,
			   HP1,HP2,HP3,
			   MEMBER_JOB,MEMBER_CONTENT
		from T_PROJECT_MEMBER
		where MEMBER_ID = #{MEMBER_ID}
	</select>
	
	<!-- 회원 태그 중복 체크 -->
	<select id="selectOverlappedTag" parameterType="memberVO" resultType="String">
	   select decode(count(*),1, 'true', 0, 'false')
	   from T_MEMBER_TAGLIST
	   where MEMBER_ID = #{MEMBER_ID} and TAG = #{TAG}
	</select>
	
	
	<!-- 로그인 -->
	<select id="login" resultType="memberVO"  parameterType="memberVO"  >
	    <![CDATA[
			select * from T_PROJECT_MEMBER 
			 where MEMBER_ID=#{MEMBER_ID}
			 and MEMBER_PW=#{MEMBER_PW}			
		]]>
	</select>
	
	<!-- 아이디 중복 체크 -->
	<select id="selectOverlappedID" parameterType="String" resultType="String">
	   select decode(count(*),1, 'true', 0, 'false')
	   from T_PROJECT_MEMBER
	   where MEMBER_ID = #{MEMBER_ID}
	</select>
	
	
	
	<!-- 회원가입시 해쉬태그 삽입 -->
	<insert id="addMember_tagList"  parameterType="memberVO">
		<![CDATA[
		 insert into T_MEMBER_TAGLIST 
			 	(MEMBER_ID,TAG)
			values
				(#{MEMBER_ID},#{TAG})
		]]>      
	</insert>
	
	
	<!-- 회원 태그 조회 -->
    <select id="selectTagList" resultMap="memResult" parameterType="String">
      <![CDATA[
         select TAG from T_MEMBER_TAGLIST
         where MEMBER_ID = #{MEMBER_ID}	 	
      ]]>
	</select>
	
	<!-- 회원 조회 -->
	<select id="selectAllMemberList" resultMap="memResult">
      <![CDATA[
         select * from T_PROJECT_MEMBER	 	
      ]]>
	</select>

	<select id="selectMemberById" resultType="memberVO"  parameterType="String" >
      <![CDATA[
         select * from T_PROJECT_MEMBER
         where
         MEMBER_ID=#{MEMBER_ID}			
      ]]>
	 </select>	
	
	<select id="selectMemberByPwd" resultMap="memResult"  parameterType="int" >
      <![CDATA[
         select * from T_PROJECT_MEMBER
         where
         pwd = #{pwd}			
      ]]>
    </select>
    
     <insert id="insertMember"  parameterType="memberVO">
		<![CDATA[
		 insert into T_PROJECT_MEMBER 
			 	(MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_GENDER,
			     MEMBER_BIRTH_Y, MEMBER_BIRTH_M, MEMBER_BIRTH_D, MEMBER_CONTENT, 
			 	 MEMBER_JOB, TEL1,TEL2,TEL3, HP1,HP2,HP3, EMAIL1,EMAIL2,
			 	 ZIPCODE, ROADADDRESS, JIBUNADDRESS,
			 	 NAMUJIADDRESS)

			values
				( #{MEMBER_ID}, #{MEMBER_PW}, #{MEMBER_NAME},
				  #{MEMBER_GENDER}, #{MEMBER_BIRTH_Y},#{MEMBER_BIRTH_M}, 
				  #{MEMBER_BIRTH_D}, #{MEMBER_CONTENT},  #{MEMBER_JOB}, 
				  #{TEL1}, #{TEL2}, #{TEL3}, #{HP1}, #{HP2}, #{HP3} , #{EMAIL1}, #{EMAIL2},
				  #{ZIPCODE}, #{ROADADDRESS}, #{JIBUNADDRESS}, 
				  #{NAMUJIADDRESS})
				  
		]]>      
	</insert>
	
	<insert id="insertMember2"  parameterType="java.util.HashMap">
		<![CDATA[
			insert into T_PROJECT_MEMBER 
			 	(MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_GENDER,
			     MEMBER_BIRTH_Y, MEMBER_BIRTH_M, MEMBER_BIRTH_D, MEMBER_CONTENT, 
			 	 MEMBER_JOB, TEL1, HP1, SMSSTS_YN, EMAIL1,EMAILSTS_YN, 
				 ZIPCODE, ROADADDRESS, JIBUNADDRESS, NAMUJIADDRESS, JOINDATE)

			values
				( #{MEMBER_ID}, #{MEMBER_PW}, #{MEMBER_NAME},
				  #{MEMBER_GENDER}, #{MEMBER_BIRTH_Y},#{MEMBER_BIRTH_M}, 
				  #{MEMBER_BIRTH_D}, #{MEMBER_CONTENT},  #{MEMBER_JOB}, 
				  #{TEL1}, #{HP1}, #{SMSSTS_YN}, #{EMAIL1},
				  #{EMAILSTS_YN}, #{ZIPCODE}, #{ROADADDRESS}, #{JIBUNADDRESS}, 
				  #{NAMUJIADDRESS}, #{JOINDATE})
		]]>      
   </insert>
   
   <select id="MyDetailInfo" resultType="memberVO"   parameterType="String"  >
	    <![CDATA[
			select * from T_PROJECT_MEMBER 
			where MEMBER_ID=#{MEMBER_ID}
    	]]>
	</select>
   
   
   <update id="modifyMyInfo" parameterType="java.util.HashMap">
	   update T_PROJECT_MEMBER
			   <set>
			      <if test= "MEMBER_PW!='' and MEMBER_PW!=NULL">
			        MEMBER_PW=#{MEMBER_PW}
			      </if>
			      <if test=" MEMBER_GENDER!='' and MEMBER_GENDER!=NULL">
			         MEMBER_GENDER=#{MEMBER_GENDER},
			      </if>
			       <if test=" MEMBER_BIRTH_Y!='' and MEMBER_BIRTH_Y!=NULL">
			         MEMBER_BIRTH_Y=#{MEMBER_BIRTH_Y},
			      </if>
			      <if test=" MEMBER_BIRTH_M!='' and MEMBER_BIRTH_M!=NULL">
			         MEMBER_BIRTH_M=#{MEMBER_BIRTH_M},
			      </if>
			      <if test=" MEMBER_BIRTH_D!='' and MEMBER_BIRTH_D!=NULL">
			         MEMBER_BIRTH_D=#{MEMBER_BIRTH_D},
			      </if>
			      <if test=" TEL1!='' and TEL1!=NULL">
			         TEL1=#{TEL1},
			      </if>
			      <if test=" TEL2!='' and TEL2!=NULL">
			         TEL2=#{TEL2},
			      </if>
			      <if test=" TEL3!='' and TEL3!=NULL">
			         TEL3=#{TEL3},
			      </if>
			      <if test=" HP1!='' and HP1!=NULL">
			         HP1=#{HP1},
			      </if>
			      <if test=" HP2!='' and HP2!=NULL">
			         HP2=#{HP2},
			      </if>
			      <if test=" HP3!='' and HP3!=NULL">
			         HP3=#{HP3},
			      </if>
			      <if test=" SMSSTS_YN!='' and SMSSTS_YN!=NULL">
			         SMSSTS_YN=#{SMSSTS_YN},
			      </if>
			      <if test=" EMAIL1!='' and EMAIL1!=NULL">
			         EMAIL1=#{EMAIL1},
			      </if>
			      <if test=" EMAIL2!='' and EMAIL2!=NULL">
			         EMAIL2=#{EMAIL2},
			      </if>
			      <if test=" EMAILSTS_YN!='' and EMAILSTS_YN!=NULL">
			         EMAILSTS_YN=#{EMAILSTS_YN},
			      </if>
			      <if test=" ZIPCODE!='' and ZIPCODE!=NULL">
			         ZIPCODE=#{ZIPCODE},
			      </if>
			      <if test=" ROADADDRESS!='' and ROADADDRESS!=NULL">
			         ROADADDRESS=#{ROADADDRESS},
			      </if>			     
			      <if test=" JIBUNADDRESS!='' and JIBUNADDRESS!=NULL">
			         JIBUNADDRESS=#{JIBUNADDRESS},
			      </if>
			      <if test=" NAMUJIADDRESS!='' and NAMUJIADDRESS!=NULL">
			         NAMUJIADDRESS=#{NAMUJIADDRESS}
			      </if>
			   </set> 
		where 
		MEMBER_ID=#{MEMBER_ID}
	</update>
     
   <delete id="deleteMember"  parameterType="String">
	<![CDATA[
	   delete from  T_PROJECT_MEMBER
	   where
	   MEMBER_ID=#{MEMBER_ID}
	]]>      
  </delete>
  
  <delete id="removeTag"  parameterType="memberVO" >
	<![CDATA[
	   delete from  T_MEMBER_TAGLIST
	   where
	   MEMBER_ID=#{MEMBER_ID} and TAG=#{TAG}
	]]>      
  </delete>
	
	
	<!-- 동적 SQL문 -->
  <select id="searchMember" parameterType="memberVO" resultMap="memResult">
      <![CDATA[
          select * from T_PROJECT_MEMBER
      ]]>
      <where>
         <if test=" name != ''  and  name != null">
            MEMBER_NAME=#{MEMBER_NAME}
         </if>
         <if test="email != ''  and email != null ">
           and EMAIL1 = #{EMAIL1}
         </if>
      </where>
      order by joinDate desc
  </select>
  
 <!--  
   <sql id="a">
    <![CDATA[
      select * from T_PROJECT_MEMBER
     ]]> 
   </sql>  -->  
  
<!--    
  <select id="searchMember" parameterType="memberVO" resultMap="memResult">
	     <include refid="a" /> 
	   <![CDATA[
         select * from T_PROJECT_MEMBER 
      ]]>
	  
       <where>
		  <choose>
		      <when test="name != '' and name != null and  email != '' and email != null">
			     name=#{name} and email=#{email}
		      </when>
		      <when test="name != '' and name != null">
			     name = #{name}
		      </when>
		      <when test="email !='' and email != null">
			    email = #{email}
		      </when>
	      </choose>
       </where>
       order by joinDate desc
   </select> -->
   <!-- 회원검색 -->
   <select id="foreachSelect" resultMap="memResult" parameterType="java.util.Map">
      <!-- <include refid="a" /> -->
      <![CDATA[
        select * from T_PROJECT_MEMBER 
          
      ]]>
      
      where name in
      <foreach item="item" collection="list" open="(" separator="," close=")" >
         #{item}
      </foreach>
      order by joinDate desc
   </select>
   
   <insert id="foreachInsert"  parameterType="java.util.Map">
      <foreach item="item"  collection="list"   open="INSERT ALL" separator=" " close="SELECT * FROM DUAL" >
          INTO  T_PROJECT_MEMBER(id, pwd, name, email)
          VALUES  (#{item.id},
                    #{item.pwd},
                    #{item.name},
                    #{item.email})
      </foreach>
   </insert>
   
   <!--  like 검색 -->
   <select id="selectLike" resultMap="memResult"  parameterType="String" >
      <![CDATA[
         select * from T_PROJECT_MEMBER
         where
         name like '%' || #{name} || '%'		
      ]]>
    </select>
</mapper>